cmake_minimum_required(VERSION 3.11)
project(TrabalhoGB_Isometrico)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# --- Gestão de Dependências com FetchContent ---
include(FetchContent)
FetchContent_Declare(
  glfw
  GIT_REPOSITORY https://github.com/glfw/glfw.git
  GIT_TAG 3.3.8
)
FetchContent_Declare(
  glm
  GIT_REPOSITORY https://github.com/g-truc/glm.git
  GIT_TAG master
)
# Adicionamos a declaração do STB que estava em falta na tua versão antiga
FetchContent_Declare(
  stb
  GIT_REPOSITORY https://github.com/nothings/stb.git
  GIT_TAG master
)
FetchContent_MakeAvailable(glfw glm stb) # E disponibilizamos o stb

# --- Lista de Ficheiros-Fonte ---
file(GLOB GAME_SOURCES "src/TrabaslhoGB/*.cpp")
set(SOURCES
    ${GAME_SOURCES}
    "Common/glad.c"
    # O stb_impl.cpp já é apanhado pelo GLOB, por isso não precisa de estar aqui
)

# --- Criação do Executável ---
add_executable(${PROJECT_NAME} ${SOURCES})

# --- Diretórios de Inclusão ---
# Adicionamos o caminho para os ficheiros .h do stb
target_include_directories(${PROJECT_NAME} PRIVATE
    "src/TrabaslhoGB"
    "include"
    ${glm_SOURCE_DIR}
    ${stb_SOURCE_DIR} # <--- CORREÇÃO FINAL AQUI
)

# --- Ligação das Bibliotecas ---
if(WIN32)
    set(OPENGL_LIBS opengl32)
elseif(APPLE)
    find_library(OpenGL_LIBRARY OpenGL)
    set(OPENGL_LIBS ${OpenGL_LIBRARY})
else()
    set(OPENGL_LIBS OpenGL::GL)
endif()
target_link_libraries(${PROJECT_NAME} PRIVATE glfw ${OPENGL_LIBS} glm)

# --- Cópia dos Recurso (Assets) ---
file(GLOB ASSET_FILES
    "src/TrabaslhoGB/map.txt"
    "src/TrabaslhoGB/*.png"
    "src/TrabaslhoGB/*.jpg"
    "src/TrabaslhoGB/*.vert"
    "src/TrabaslhoGB/*.frag"
)
add_custom_command(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    ${ASSET_FILES}
    $<TARGET_FILE_DIR:${PROJECT_NAME}>
    COMMENT "Copiando ficheiros de recurso para a pasta de build..."
)
